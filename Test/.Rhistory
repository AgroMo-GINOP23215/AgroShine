setwd("~/Documents/muSoGuiTest")
list.files()
knitr::opts_chunk$set(echo = TRUE)
library(RBBGCMuso)
library(RBBGCMuso)
#Header TRUE, mivel a mérési adatok file-jának első sora a változóneveket tartalmazza
adatok<-read.table("hhs_maxLH_LH0_datactrl.txt",header=TRUE)
adatok<-as.data.frame(adatok)
plot(pressure)
metNAmes<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
metNAmes
metNAmes<-paste(metNames,mesUnit)
metNAmes<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
mesUnit<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=3,nrows = 1)))
metNAmes<-paste(metNames,mesUnit)
metNames<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
mesUnit<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=3,nrows = 1)))
metNAmes<-paste(metNames,mesUnit)
rm(metNAmes)
metNames<-paste(metNames,mesUnit)
metNames<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
mesUnit<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=3,nrows = 1)))
metNames<-paste(metNames,mesUnit)
colnames(metData)<-metNames
metData<-read.table("hhs_2009-2011.mtc43",skip=4)
colnames(metData)<-metNames
mesUnit<-c("","",as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=3,nrows = 1))))
metNames<-paste(metNames,mesUnit)
colnames(metData)<-metNames
head(metData)
head(mesUnit)
metData<-read.table("hhs_2009-2011.mtc43",skip=4)
metNames<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
mesUnit<-c("","","(°C)","(°C)","(°C)","(cm)","(Pa)","(Wm^₂)","(s)")
metNames<-paste(metNames,mesUnit)
colnames(metData)<-metNames
head(metData)
head(metData)
plot(plotly)
install.packages("plotly")
plot(plotly)
library(plotly)
library(plotly)
library(RBBGCMuso)
#Header TRUE, mivel a mérési adatok file-jának első sora a változóneveket tartalmazza
measuredData<-read.table("hhs_maxLH_LH0_datactrl.txt",header=TRUE)
measuredData<-as.data.frame(measuredData)
head(measuredData)
metData<-read.table("hhs_2009-2011.mtc43",skip=4)
metNames<-as.character(unlist(read.table("hhs_2009-2011.mtc43",skip=2,nrows = 1)))
mesUnit<-c("","","(°C)","(°C)","(°C)","(cm)","(Pa)","(Wm^₂)","(s)")
metNames<-paste(metNames,mesUnit)
colnames(metData)<-metNames
head(metData)
library(plotly)
getwd()
data("iris")
data(iris)
head(iris)
summary(iris)
plot(iris)
plot(iris$Petal.Length,iris$Sepal.Width)
ggplot(iris,aes(x=Petal.Length, y=Sepa.Width))
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width))
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width)) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,colour="red")) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width)) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,col= Species)) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,col= Species,size=Petal.Width)) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,col= Species,size=Petal.Width, shape=Species)) +
geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,col= Species,size=Petal.Width, shape=Species,alpha=Sepal.Length)) +
geom_point()
ggplot(iris, aes(Species,Petal.Length))+
geom(stat="summary",fun.y="max")
ggplot(iris, aes(Species,Petal.Length))+
geom_bar(stat="summary",fun.y="max")
ggplot(iris, aes(Species,Petal.Length))+
geom_bar(stat="summary",fun.y="min")
ggplot(iris, aes(Species,Petal.Length))+
geom_bar(stat="summary",fun.y="mean")
ggplot(iris, aes(Species,Petal.Length,fill="blue"))+
geom_bar(stat="summary",fun.y="mean")
ggplot(iris, aes(Species,Petal.Length,fill="yellow"))+
geom_bar(stat="summary",fun.y="mean")
geom_bar(stat="summary",fun.y="mean",fill="blue")
ggplot(iris, aes(Species,Petal.Length,fill=Species)+
geom_bar(stat="summary",fun.y="mean",fill="blue")
ggplot(iris, aes(Species,Petal.Length,fill=Species)+
geom_bar(stat="summary",fun.y="mean",fill="blue")
)
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue")
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black")
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point()
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point(position = position_jitter(0))
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point(position = position_jitter(0.1))
ggplot(iris, aes(Species,Petal.Length,fill=Species))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point(position = position_jitter(0.1),size=2,shape =21)
ggplot(iris, aes(Species,Petal.Length))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point(position = position_jitter(0.1),size=2,shape =21)
myPlot
myPlot<-ggplot(iris, aes(Species,Petal.Length))+
geom_bar(stat="summary",fun.y="mean",fill="blue",col="black") +
geom_point(position = position_jitter(0.1),size=2,shape =21)
myPlot
myPlot +theme(parel.grid=element_blank())
myPlot +theme(panel.grid=element_blank())
?theme
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(col=black,size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(col="black",size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(col="black",size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(colour = "black",size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
axis.line.y = element_line(colour = "black",size=0.2),
axis.line.x = element_line(colour = "black",size=0.2))
myPlot +theme(panel.grid=element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
myPlot
myPlot + theme_bw()
myPlot + theme_classic()
myPlot + theme_dark()
myPlot + theme_grey()
myPlot + theme_light()
myPlot + theme_linedraw()
str(metData)
str(as.factor(metData))
str(factor(metData))
metData$`year `<-as.factor(metData$`year `)
str(metData)
unique(metData$`year `)
ggplot(metData,aes(`prcp (cm)`)+geom_point()
)
ggplot(metData,aes(`prcp (cm)`))+geom_point()
ggplot(metData,aes(`year `,`prcp (cm)`))+geom_point()
ggplot(metData,aes(`yday `,`prcp (cm)`))+geom_point()
ggplot(metData,aes(`yday `,`prcp (cm)`),col=year)+geom_point()
ggplot(metData,aes(`yday `,`prcp (cm)`),col=year)+geom_point()
ggplot(iris,aes(x=Petal.Length, y=Sepal.Width,col= Species,size=Petal.Width)) +
geom_point()
length(metData)
length(metData[,1])
cbind(1:1095,metData)
metData<-cbind(1:1095,metData)
colnames(metData)[1]<-"adat"
head(metData)
ggplot(metData,aes(`adat`,`prcp (cm)`),col=year)+geom_point()
ggplot(metData,aes(`adat`,`prcp (cm)`),col=as.factor(year)+geom_point()
)
ggplot(metData,aes(`adat`,`prcp (cm)`,col=year))+geom_point()
ggplot(metData,aes(`adat`,`prcp (cm)`,col=`year `))+geom_point()
combinedData<-cbind(metData,measuredData)
head(combinedData)
combinedData<-cbind(metData,measuredData)[,-1:3]
head(combinedData)
combinedData<-cbind(metData,measuredData)[,-(1:3)]
head(combinedData)
as.Date("1.1.2009")
?as.Date
as.Date("01.01.2009","%d.%m.%y")
combinedData<-cbind(as.Date(paste(measuredData[,1:3],sep="/"),"%y/%m/%d"),measuredData)
?apply
measuredData[,1:3]
measuredData[1,1:3]
paste(measuredData[1,1:3],"")
paste(measuredData[1,1:3],"\")
paste(measuredData[1,1:3],"\")
paste(measuredData[1,1:3],"/")
paste(as.vector(measuredData[1,1:3]),"/")
paste(unlist(measuredData[1,1:3]),"/")
unlist(measuredData[1,1:3])
as.vector(unlist(measuredData[1,1:3]))
as.character(unlist(measuredData[1,1:3]))
paste(as.character(measuredData[1,1:3]),"/")
paste(as.character(unlist(measuredData[1,1:3])),"/")
as.character(unlist(measuredData[1,1:3]))
paste(as.character(unlist(measuredData[1,1:3])))
paste(as.character(unlist(measuredData[1,1:3])),sep="-")
paste(c("a","b"),sep="/")
paste(c("a","b"),sep="n")
?paste
paste(c("a","b"),collapse="n")
paste(c("a","b"),collapse ="/")
paste(as.character(unlist(measuredData[1,1:3])),collapse="/")
combinedData<-cbind(as.Date(paste(measuredData[,1:3],collapse="/"),"%y/%m/%d"),measuredData)
dates<-apply(measuredData[1:3],1,function (x) paste(x,collapse="/"))
dates
?do.call
do.Call(funcion(x) 2*x, 1:3)
do.Call(funcion(x) 2*x, as.list(1:3))
do.Call("sum", as.list(1:3))
do.call(funcion(x) 2*x, as.list(1:3))
do.call(funcion(x) 2*x, 1:3)
do.call("sum", 1:3)
do.call("sum", as.list(1:3))
do.call(function(x) 2*x, as.list(1:3))
do.call(funcion(x) 2*x, as.list(1:3))
do.call("funcion(x) 2*x", as.list(1:3))
f
f<-function(x) 2*x
do.call("f", as.list(1:3))
do.call(function(x) print(x), as.list(1:3))
lapply(as.list(1:3), print)
lapply(as.list(1:3), function(x) 2*x)
unlist(lapply(as.list(1:3), function(x) 2*x))
?as.Date
dates
as.Date(dates,"%y/%m/%d")
as.Date(dates[1],"%y/%m/%d")
as.Date(dates[1],"%y/%m/%d")
dates
as.character(dates)
as.vector(as.character(dates))
as.vector(as.character(dates))
format(9,digits=2)
format(9,digits=2,trim=FALSE)
format(9,digits=2,trim=TRUE)
format(09,digits=2,trim=TRUE)
format(9,digits=4,trim=TRUE)
format(9,digits=4,trim=FALSE)
?format
?zero.print
format(9, width = 2)
format(9, width = 3)
format(9, width = 2)
formatC(9,width = 2,flag="0")
formatC(19,width = 2,flag="0")
formatC(01,width = 2,flag="0")
formatC(1,width = 2,flag="0")
date()
dates
formatC(1:9,width = 2,flag = "0")
formatC(cbind(1:9,1:9),width = 2,flag = "0")
combinedData<-cbind(measuredData,metData)[,-(1:3)]
combinedData[,1:3]<-formatC(combinedData[,2:3],width = 2, flag = "0")
combinedData<-cbind(measuredData,metData)[,-(1:3)]
combinedData[,2:3]<-formatC(combinedData[,2:3],width = 2, flag = "0")
dates<-apply(measuredData[1:3],1,function (x) paste(x,collapse="/"))
dates
combinedData[,2:3]<-formatC(combinedData[,2:3],width = 2, flag = "0")
formatC(combinedData[,2:3],width = 2, flag = "0")
combinedData[,2:3]
combinedData<-cbind(measuredData,metData)[,-(1:3)]
head(combinedData)
head(measuredData)
combinedData<-cbind(measuredData,metData)
head(combinedData)
head(combinedData[,15:17])
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-formatC(combinedData[,2:3],width = 2, flag = "0")
head(combinedData)
combinedData[,2:3]
combinedData[,2:3]
formatC(combinedData[,2:3],width = 2, flag = "0")
?apply
apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(measuredData[1:3],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(paste(measuredData[,1:3],collapse="/"),"%y/%m/%d"),measuredData)
dates
dates<-apply(measuredData[1:3],1,function (x) paste(x,collapse="/"))
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
combinedData[,2:3]
head(combinedData)
dates<-apply(combinedData[1:3],1,function (x) paste(x,collapse="/"))
dates
as.Date(dates,"%y/%m/%d")
as.Date(dates,"%y/%m/%d")
as.Date(dates[1],"%y/%m/%d")
typeof(dates[1])
dates[1]
as.Date("2009/01/01", "%y/%m/%d")
?as.Date
as.Date("2009.01.01", "%y.%m.%d")
as.Date("01/01/2009", "%d/%m/%y")
dates<-apply(combinedData[3:1],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[3:1],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(paste(measuredData[,1:3],collapse="/"),"%y/%m/%d"),measuredData)
combinedData<-cbind(as.Date(dates,"%d/%m/%y"),measuredData)
combinedData
colnames(combinedData)[1]<-"date"
head(combinedData)
ggplot(metData,aes(`date`,`prcp (cm)`,col=`year `))+geom_point()
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=`year `))+geom_point()
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[3:1],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(dates,"%d/%m/%y"),measuredData)
colnames(combinedData)[1]<-"date"
head(combinedData)
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData
head(combinedData)
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
head(combinedData)
combinedData<-cbind(as.Date(dates,"%d/%m/%y"),combinedData)
colnames(combinedData)[1]<-"date"
head(combinedData)
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=`year `))+geom_point()
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=`year`))+geom_point()
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=as.factor(`year`)))+geom_point()
dates
as.Date(dates[1],"%d/%m/%y")
?as.Date
as.Date(c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92"), "%m/%d/%y")
dates[1]
typeof(dates[1])
typeof(dates)
typeof(as.vector(dates))
typeof(c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92"))
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[c(2,1,3)],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(dates,"%d/%m/%y"),combinedData)
colnames(combinedData)[1]<-"date"
head(combinedData)
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[c(2,1,3)],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(dates,"%m/%d/%y"),combinedData)
colnames(combinedData)[1]<-"date"
head(combinedData)
dates
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[c(2,3,1)],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(dates,"%m/%d/%y"),combinedData)
colnames(combinedData)[1]<-"date"
head(combinedData)
dates
as.Date(c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92"), "%m/%d/%y")
as.Date(c("09/20/2011"), "%m/%d/%y")
as.Date(c("02/27/92"), "%m/%d/%y")
as.Date(c("12/27/92"), "%m/%d/%y")
as.Date(c("12/20/2011"), "%m/%d/%y")
as.Date(c("1/20/2011"), "%m/%d/%y")
as.Date(c("1/11/2011"), "%m/%d/%y")
as.Date(c("1/11/2011"), "%m/%d/%Y")
combinedData<-cbind(measuredData,metData)[,-(15:17)]
combinedData[,2:3]<-apply(combinedData[,2:3],2,function (x) formatC(x,width = 2, flag = "0"))
dates<-apply(combinedData[c(2,3,1)],1,function (x) paste(x,collapse="/"))
combinedData<-cbind(as.Date(dates,"%m/%d/%Y"),combinedData)
colnames(combinedData)[1]<-"date"
head(combinedData)
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=as.factor(`year`), groups=as.factor(`year`))+geom_point()
)
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=as.factor(`year`), groups=as.factor(`year`)))+geom_point()
?aes
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=as.factor(`year`), group=as.factor(`year`)))+geom_point()
ggplot(combinedData,aes(`date`,`prcp (cm)`,col=as.factor(`year`), group=as.factor(`year`)))+geom_point()
parent.frae(1)
parent.frame(1)
parent.frame(2)
parent.frame(2)$ofile
a
iris
iris[,1]
iris[,1] %>%
sum()
knitr::opts_chunk$set(echo = TRUE)
source("agroFunctions.R")
setwd("~/Documents/projects/AGROMO/AgroShine/Test")
source("agroFunctions.R")
importPackages(
#Importing the necessary packages
c("rgdal", # This requires gdal and libgdal-dev sofwares
# presenting in the computer
"maptools",
"ggplot2",
"plyr")
)
dataShape<- readOGR(dsn="../CCMO_racs_teljes_mo_eov.shp")
View(dataShape)
importPackages(
#Importing the necessary packages
c("rgdal", # This requires gdal and libgdal-dev sofwares
# presenting in the computer
"maptools",
"ggplot2",
"broom"
"plyr")
importPackages(
#Importing the necessary packages
c("rgdal", # This requires gdal and libgdal-dev sofwares
# presenting in the computer
"maptools",
"ggplot2",
"broom",
"plyr")
)
saveRDS(hungaryGrid)
saveRDS(hungaryGrid,"hungaryGrid.rds")
rm(list=ls()) # Minden fölösleges változó törlése
source("agroFunctions.R") # saját Agromohoz kötődő függvények betöltése (ebben van az importpackage is)
importPackages(
#Importing the necessary packages
c("rgdal", # This requires gdal and libgdal-dev sofwares
# presenting in the computer
"maptools",
"ggplot2",
"broom",
"plyr")
)
hungaryGrid<- readOGR(dsn="../CCMO_racs_teljes_mo_eov.shp")
hungaryGrid<- broo::tidy(hungaryGrid)
hungaryGrid<- broom::tidy(hungaryGrid)
head(hungaryGrid)
saveRDS(hungaryGrid,"hungaryGrid.rds")
hungaryGrid<- readOGR(dsn="../CCMO_racs_teljes_mo_eov.shp")
View(hungaryGrid)
hungaryGrid@data[["index"]]
getClass("Spacial")
library(sp)
getClass("Spacial")
getClass("Spatial")
hungaryGrid@proj4string@projargs
hungaryGrid@bbox
hungaryGrid@proj4string
summary(hungaryGrid)
ggplot(hungaryGrid)+aes(long,lat)+geom_polygon()+geom_path()
ggplot(hungaryGrid)+aes(long,lat)+geom_polygon()+geom_path()
ggplot(hungaryGrid)+aes(long,lat)+geom_path()
ggplot(hungaryGrid)+aes(long,lat)+geom_path()
ggplot(hungaryGrid)+aes(long,lat)+geom_path()
ggplot(hungaryGrid)+aes(long,lat)+geom_polygon()
ggplot(hungaryGrid)+aes(long,lat,group=id)+geom_path()
hungaryGrid$lambda
hungaryGrid$lambda[1]
hungaryGrid$fi[1]
hungaryGrid$index[1]
hungaryGrid$index
which(hungaryGrid$index==1)
hungaryGrid$lambda[1001]
which(hungaryGrid$index==0)
plot(hungaryGrid$index)
hungaryGrid$lambda
plot(hungaryGrid$lambda)
typeof(hungaryGrid$lambda)
str(hungaryGrid)
head(str(hungaryGrid))
head(str(hungaryGrid@polygons
c
hungaryGrid@polygons
hungaryGrid@polygons@ID
hungaryGrid@polygons@area
hungaryGrid@ID
hungaryGrid@data
hungaryGrid@data %>%
arrange(index)
hungaryGrid@plotOrder
plot(hungaryGrid)
typeof(hungaryGrid@polygons)
length(hungaryGrid@polygons)
hungaryGrid@polygons[1]
hungaryGrid@polygons[1]$ID
hungaryGrid@polygons[1][1]
typeof(hungaryGrid@polygons[1])
hungaryGrid@polygons[1][[1]]
hungaryGrid@polygons[[[1]]
hungaryGrid@polygons[[1]]
hungaryGrid@polygons[[1]][[2]]
hungaryGrid@polygons[[1]]@area
hungaryGrid@polygons@area
hungaryGrid@polygons[[1]]@area
hungaryGrid@polygons[[1]]@Polygons
hungaryGrid@polygons[[1]]@Polygons[[2]]
hungaryGrid@polygons[[1]]@Polygons[[1]]
coords(hungaryGrid@polygons[[1]]@Polygons)
coords(hungaryGrid@polygons[[1]])
coords(hungaryGrid@polygons)
coordinates(hungaryGrid@polygons)
coordinates(hungaryGrid@polygons[[1]]@Polygons)
hungaryGrid@polygons[[1]]@Polygons
hungaryGrid@polygons[[1]]@Polygons@coords
hungaryGrid@polygons[[1]]@coords
hungaryGrid@polygons[[1]]@labpt
coords(hungaryGrid@polygons[[1]])
hungaryGrid@polygons[[1]]@labpt
hungaryGrid@polygons
hungaryGrid@polygons[[1]]
hungaryGrid@proj4string
